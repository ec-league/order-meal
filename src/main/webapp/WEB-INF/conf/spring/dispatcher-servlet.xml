<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">
    <!-- 本配置文件是工名为mvc-dispatcher的DispatcherServlet使用， 提供其相关的Spring MVC配置 -->

    <!-- 启用Spring基于annotation的DI, 使用户可以在Spring MVC中使用Spring的强大功能。 激活 @Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->
    <context:annotation-config/>
    <!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service -->
    <context:component-scan base-package="com.artisanstate.launch.controller">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>
    <!-- HandlerMapping, 无需配置， Spring MVC可以默认启动。 DefaultAnnotationHandlerMapping annotation-driven HandlerMapping -->

    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <mvc:annotation-driven/>
    <!-- 静态资源处理， css， js， imgs -->
    <!--<mvc:resources location="/resources/" mapping="/resources/**"/>-->
    <!--&lt;!&ndash; 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property value="1" name="order"/>-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--<entry value="application/json" key="json"/>-->
                <!--<entry value="application/xml" key="xml"/>-->
                <!--<entry value="text/html" key="htm"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--&lt;!&ndash; JSON View &ndash;&gt;-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property value="true" name="ignoreAcceptHeader"/>-->
    <!--</bean>-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property value="org.springframework.web.servlet.view.JstlView" name="viewClass"/>
        <property value="/WEB-INF/jsps/" name="prefix"/>
        <property value=".jsp" name="suffix"/>
    </bean>

    <!--&lt;!&ndash;200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">-->
        <!--<property value="209715200" name="maxUploadSize"/>-->
        <!--<property value="UTF-8" name="defaultEncoding"/>-->
        <!--<property value="true" name="resolveLazily"/>-->
    <!--</bean>-->
</beans>